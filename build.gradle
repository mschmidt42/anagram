plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
	id 'eclipse'
}

repositories {
    mavenCentral()
}


dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

}

application {
    // Define the main class for the application.
    mainClass = 'Main'
}

test {
    useJUnitPlatform()
}

eclipse {
  classpath {
    // see https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html
    downloadSources = true
    downloadJavadoc = true
  }
}

/* handle non existing source folders*/
def eclipseSourceFolders=[
    'src/main/java',
    'src/main/resources',
    'src/test/java',
    'src/test/resources'
];
tasks.eclipse.dependsOn << {

    for (String sourceFolder: eclipseSourceFolders){
        def resourceDir = new File(project.projectDir, sourceFolder)
        /* try to create folder when not existing */
        if( !resourceDir.exists() && ! resourceDir.mkdirs() ) {
            logger.info("Not able to create %1",resourceDir);
        }
    }
}

task toReplit(type:Copy) {
	from("src/main/java"){
		include "**/*.java"
	}
	from("src/test/java"){
		include "**/*.java"
	}
	into "build/replit"
}